var GithubOrganizationEventManager=function(e,a,s){function o(){for(var a=0;f>a;a++){var s='<div class="event_container">';s+=t(y[a]),s+=i(y[a]),s+="</div>",document.getElementById(e).innerHTML+=s}}function t(e){var a='<div class="left_info"><div class="author"><img src="'+e.actor.avatar_url+'s=30" alt="'+e.actor.login+'" /></div>';switch(e.type){case"PushEvent":a+='<div class="icon"><span class="octicon octicon-git-commit" title="Commit"></span></div>';break;case"CreateEvent":a+=n(e.payload.ref_type);break;case"IssuesEvent":a+=c(e.payload.action);break;case"IssueCommentEvent":a+='<div class="icon"><span class="octicon octicon-comment-discussion" title="'+e.type+'"></span></div>';break;default:a+='<div class="icon"><span class="octicon octicon-flame" title="'+e.type+'"></span></div>'}var s=["Gen","Feb","Mar","Apr","Mag","Giu","Lug","Ago","Set","Ott","Nov","Dec"],o=new Date(e.created_at);return a+='<div class="date">'+o.getDate()+" "+s[o.getMonth()]+"</div></div>"}function i(e){var a='<div class="right_info">';switch(e.type){case"PushEvent":a+=r(e);break;case"CreateEvent":a+=l(e);break;case"IssuesEvent":a+=d(e);break;case"IssueCommentEvent":a+=p(e);break;default:a+='<span class="octicon octicon-flame" title="'+e.type+'"></span>'}return a+="</div>"}function n(e){var a="";switch(e){case"repository":a='<div class="icon"><span class="octicon octicon-repo" title="Repository"></span></div>';break;case"branch":a='<div class="icon"><span class="octicon octicon-git-branch" title="Branch"></span></div>';break;case"tag":a='<div class="icon"><span class="octicon octicon-tag" title="Tag"></span></div>';break;default:a='<div class="icon"><span class="octicon octicon-flame" title="Flame"></span>'+e+"</div>"}return a}function c(e){var a="";switch(e){case"assigned":a='<div class="icon"><span class="octicon octicon-issue-assigned" title="Issue assigned"></span></div>';break;case"unassigned":a='<div class="icon"><span class="octicon octicon-issue-unassigned" title="Issue unassigned"></span></div>';break;case"labeled":a='<div class="icon"><span class="octicon octicon-issue-labeled" title="Issue labeled"></span></div>';break;case"unlabeled":a='<div class="icon"><span class="octicon octicon-issue-unlabeled" title="Issue unlabeled"></span></div>';break;case"opened":a='<div class="icon"><span class="octicon octicon-issue-opened" title="Issue opened"></span></div>';break;case"closed":a='<div class="icon"><span class="octicon octicon-issue-closed" title="Issue closed"></span></div>';break;case"reopened":a='<div class="icon"><span class="octicon octicon-issue-reopened" title="Issue reopened"></span></div>';break;default:a='<div class="icon"><span class="octicon octicon-flame" title="Flame"></span>'+e+"</div>"}return a}function r(e){var a="",s=e.payload.ref.replace("refs/heads/","");a+='pushed to branch: <a href="'+m(e.repo.url,s)+'">'+s+"</a><br />",a+='of repository: <a href="'+u(e.repo.url)+'">'+v(e.repo.name)+"</a><br />",a+='<ul class="listCommit">';var o=1,t=0;e.payload.commits.length<=h?o=e.payload.commits.length:(o=h,t=e.payload.commits.length-h);for(var i=0;o>i;i++)a+='<li><a href="'+b(e.payload.commits[i].url)+'">'+e.payload.commits[i].message+"</a></li>";return t>0&&(a+="<li>and "+t+" more ...</li>"),a+="</ul>"}function l(e){var a="";switch(e.payload.ref_type){case"repository":a='created repository: <a href="'+u(e.repo.url)+'">'+v(e.repo.name)+"</a><br />",a+=e.payload.description;break;case"branch":a='created branch: <a href="'+u(e.repo.url)+"/tree/"+e.payload.ref+'">'+e.payload.ref+"</a><br />",a+='of repository: <a href="'+u(e.repo.url)+'">'+v(e.repo.name)+"</a><br />",a+=e.payload.description;break;case"tag":a='created tag: <a href="'+u(e.repo.url)+"/tree/"+e.payload.ref+'">'+e.payload.ref+"</a><br />",a+='at: <a href="'+u(e.repo.url)+'">'+v(e.repo.name)+"</a><br />",a+=e.payload.description;break;default:a='<div class="icon"><span class="octicon octicon-flame" title="Flame"></span>'+e.payload.ref_type+"</div>"}return a}function d(e){var a="";switch(e.payload.action){case"assigned":a='Assigned issue <a href="'+e.payload.issue.html_url+'">#'+e.payload.issue.number+"</a> to "+e.payload.issue.assignee;break;case"unassigned":a='Unassigned issue <a href="'+e.payload.issue.html_url+'">#'+e.payload.issue.number+"</a> at "+e.payload.issue.assignee;break;case"labeled":a="The label "+e.payload.label.name+' was added at issue <a href="'+e.payload.issue.html_url+'">#'+e.payload.issue.number+"</a>";break;case"unlabeled":a="The label "+e.payload.label.name+' was removed at issue <a href="'+e.payload.issue.html_url+'">#'+e.payload.issue.number+"</a>";break;case"opened":a='Opened issue <a href="'+e.payload.issue.html_url+'">#'+e.payload.issue.number+"</a> on ",a+='<a href="'+u(e.repo.url)+'">'+v(e.repo.name)+"</a><br />",a+=e.payload.issue.title;break;case"closed":a='Closed issue <a href="'+e.payload.issue.html_url+'">#'+e.payload.issue.number+"</a> on ",a+='<a href="'+u(e.repo.url)+'">'+v(e.repo.name)+"</a><br />",a+=e.payload.issue.title;break;case"reopened":a='Reopened issue <a href="'+e.payload.issue.html_url+'">#'+e.payload.issue.number+"</a> on ",a+='<a href="'+u(e.repo.url)+'">'+v(e.repo.name)+"</a><br />",a+=e.payload.issue.title;break;default:a='<div class="icon"><span class="octicon octicon-flame" title="Flame"></span>'+e.payload.action+"</div>"}return a}function p(e){var a="";return a='Commented on issue <a href="'+e.payload.issue.html_url+'">#'+e.payload.issue.number+"</a> on ",a+='<a href="'+u(e.repo.url)+'">'+v(e.repo.name)+"</a><br />",a+=e.payload.comment.body}function u(e){return e.replace("https://api.github.com/repos/","https://github.com/")}function m(e,a){var s=u(e);return s+="/tree/"+a}function v(e){return e.replace(a+"/","")}function b(e){var a=u(e);return a=a.replace("commits","commit")}s=s||{};var y,f=void 0===s.ItemToDisplay?10:s.ItemToDisplay,h=void 0===s.CommitEventMaxItemToDisplay?2:s.CommitEventMaxItemToDisplay;this.GetData=function(){var e=new XMLHttpRequest;e.dataType="json",e.open("GET","https://api.github.com/orgs/"+a+"/events?per_page="+f,!0),e.setRequestHeader("Accept","application/vnd.github.v3.raw+json"),e.setRequestHeader("Content-Type","application/json;charset=UTF-8"),e.onreadystatechange=function(){4==e.readyState&&200==e.status&&(y=JSON.parse(e.response),o())},e.send()}};